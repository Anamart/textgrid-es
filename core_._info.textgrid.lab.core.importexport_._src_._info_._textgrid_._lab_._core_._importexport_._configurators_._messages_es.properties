
AbstractAggregationSupplier_FailedToCanonicalizeWarning = Failed to canonicalize a path concerning {0} while importing {1}. Probably the aggregation is broken.

AbstractAggregationSupplier_NotImportedWarning = Removed {0} from the Aggregation {1} since it is not imported in this batch.

AggregationConfigurator_Adding_Children = Adding {0}'s children ...

AggregationConfigurator_AggregationParseFailed = Failed to parse the Aggregation file {0}. The aggregated Objects are probably missing from your Import set, and importing the Aggregation file will probably fail.

AggregationConfigurator_Aggregation_invalid_URI = The Aggregation {0} contained an invalid URI: {1}

AggregationConfigurator_Error_reading_aggregation = An error occured while reading the Aggregation from {0}: {1}
AggregationConfigurator_FailedToAddEntry=Failed to add entry {1}\u00A0from aggregation {0} to the export list, skipping. Cause:\n{2}.

AggregationConfigurator_Unknown_Aggregated_Resource = Aggregation {0} aggregates {1}, which is not a file to be found on the local hard disk. It will not be added, but the Aggregation will simply contain the entry.
AggregationConfigurator_WorkProblem=There was a problem adding the work metadata associated with the edition {0} to the export (technical details below). This may be, e.g., due to broken metadata, or insufficient access rights. You can export anyway, but the work metadata will be missing.

SizeWarningConfigurator_ProblematicallyLargeWarning = This file is problematically large. Due to a bug in a library shipped with Java 6, this file may fail to import. \r\nWe suggest you upgrade your Java version or use the koLibRI based Import Tool for large files.

SizeWarningConfigurator_TooLargeWarningTitle = {0} too large

XMLConfigurator_AnalyzingXMLStructure = Analyzing {0}'s XML structure

XMLConfigurator_ErrorAnalyzingXMLStructure = An error occurred while analyzing {1}'s XML content. This is not really a problem, you just have to setup the rewriting method yourself.
